[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "komega-python"
version = "2.0.0"
description = "A Python library for solving linear systems in materials science"
readme = "README.md"
license = {text = "LGPL-3.0"}
authors = [
    {name = "Kazuyoshi Yoshimi", email = "k-yoshimi@issp.u-tokyo.ac.jp"}
]
maintainers = [
    {name = "Kazuyoshi Yoshimi", email = "k-yoshimi@issp.u-tokyo.ac.jp"}
]
keywords = ["linear-systems", "iterative-solvers", "materials-science", "fortran", "bicg", "cg", "cocg"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.19.0",
    "scipy>=1.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "flake8>=3.8.0",
    "black>=21.0.0",
    "isort>=5.0.0",
    "mypy>=0.910",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]
mpi = [
    "mpi4py>=3.0.0",
]
profiling = [
    "line-profiler>=3.0.0",
    "memory-profiler>=0.60.0",
]

[project.scripts]
komega-test = "run_tests:main"

[project.urls]
Homepage = "https://github.com/k-yoshimi/Komega"
Documentation = "https://github.com/k-yoshimi/Komega/tree/python/python_komega"
Repository = "https://github.com/k-yoshimi/Komega"
"Bug Tracker" = "https://github.com/k-yoshimi/Komega/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["komega*"]

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.yml", "*.yaml"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["komega"]

[tool.mypy]
python_version = "3.9"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = false
warn_unreachable = true
strict_equality = false
explicit_package_bases = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["."]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "test_*.py",
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
